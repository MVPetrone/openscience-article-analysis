# Hello World in R
print("Hello, World!")
# Hello World in R
print("Hello, World!")
# Hello World in R
print("Hello, World!")
# Hello World in R
print("Hello, World!")
# Hello World in R
print("Hello, World!")
# Hello World in R
print("Hello, World!")
# Import the data from CSV
data <- read.csv("data.csv")
# Import the data from CSV
data <- read.csv("./data.csv")
getwd()
setwd("C:\Users\PC\Desktop\projects\R")
setwd("C:/Users/PC/Desktop/projects/R")
# Load necessary libraries
library(dplyr)
library(ggplot2)
getwd()
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Assuming your CSV has columns named 'Journal' and 'TransparencyScore'
# If the column names are different, adjust them accordingly
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(TransparencyScore), 2))
# Load necessary libraries
library(dplyr)
library(ggplot2)
getwd()
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(Transparency.score..1.5.), 2))
# Print the result
print(average_transparency)
# Visualize the result with a bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity") +
labs(title = "Average Transparency Score by Journal",
x = "Journal",
y = "Average Transparency Score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
reticulate::repl_python()
# Visualize the result with a bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity") +
labs(title = "Average Transparency Score by Journal",
x = "Journal",
y = "Average Transparency Score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(data)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(RColorBrewer)  # For additional color palettes
library(ggthemes)       # For additional themes
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(RColorBrewer)  # For additional color palettes
library(ggthemes)       # For additional themes
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(TransparencyScore), 2))
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(RColorBrewer)  # For additional color palettes
library(ggthemes)     # For additional themes
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(Transparency.score..1.5.), 2))
# Print the result
print(average_transparency)
# Create a more colorful bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity",
fill = brewer_pal(type = "qual", palette = "Set2")[1:length(average_transparency$Journal)]) +
labs(title = "Average Transparency Score by Journal",
subtitle = "Higher scores indicate greater transparency",
x = "Journal",
y = "Average Transparency Score") +
theme_readthedocs() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.border = element_rect(color = "gray", fill = NA),
strip.background = element_rect(fill = "gray", color = "white")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = AvgTransparency),
vjust = -0.5,
color = "black",
size = 3)
# Install and load necessary libraries
install.packages(c("dplyr", "ggplot2", "RColorBrewer", "ggthemes"))
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(Transparency.score..1.5.), 2))
# Print the result
print(average_transparency)
# Create a more colorful bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity",
fill = brewer_pal(type = "qual", palette = "Set2")[1:length(average_transparency$Journal)]) +
labs(title = "Average Transparency Score by Journal",
subtitle = "Higher scores indicate greater transparency",
x = "Journal",
y = "Average Transparency Score") +
theme_readthedocs() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.border = element_rect(color = "gray", fill = NA),
strip.background = element_rect(fill = "gray", color = "white")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = AvgTransparency),
vjust = -0.5,
color = "black",
size = 3)
# Install and load necessary libraries
install.packages(c("dplyr", "ggplot2", "RColorBrewer", "ggthemes"))
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(Transparency.score..1.5.), 2))
# Print the result
print(average_transparency)
# Create a more colorful bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity",
fill = brewer_pal(type = "qual", palette = "Set2")[1:length(average_transparency$Journal)]) +
labs(title = "Average Transparency Score by Journal",
subtitle = "Higher scores indicate greater transparency",
x = "Journal",
y = "Average Transparency Score") +
theme_readthedocs() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.border = element_rect(color = "gray", fill = NA),
strip.background = element_rect(fill = "gray", color = "white")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = AvgTransparency),
vjust = -0.5,
color = "black",
size = 3)
# Install and load necessary libraries
install.packages(c("dplyr", "ggplot2", "RColorBrewer", "ggthemes"))
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(Transparency.score..1.5.), 2))
# Print the result
print(average_transparency)
# Create a more colorful bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity",
fill = brewer_pal(type = "qual", palette = "Set2")[1:length(average_transparency$Journal)]) +
labs(title = "Average Transparency Score by Journal",
subtitle = "Higher scores indicate greater transparency",
x = "Journal",
y = "Average Transparency Score") +
theme_readthedocs() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.border = element_rect(color = "gray", fill = NA),
strip.background = element_rect(fill = "gray", color = "white")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = AvgTransparency),
vjust = -0.5,
color = "black",
size = 3)
install.packages(c("dplyr", "ggplot2", "RColorBrewer", "ggthemes"))
# Install and load necessary libraries
install.packages(c("dplyr", "ggplot2", "RColorBrewer", "ggthemes"))
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(Transparency.score..1.5.), 2))
# Print the result
print(average_transparency)
# Create a more colorful bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity",
fill = brewer_pal(type = "qual", palette = "Set2")[1:length(average_transparency$Journal)]) +
labs(title = "Average Transparency Score by Journal",
subtitle = "Higher scores indicate greater transparency",
x = "Journal",
y = "Average Transparency Score") +
theme_readthedocs() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
panel.border = element_rect(color = "gray", fill = NA),
strip.background = element_rect(fill = "gray", color = "white")) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
geom_text(aes(label = AvgTransparency),
vjust = -0.5,
color = "black",
size = 3)
# Load necessary libraries
library(dplyr)
library(ggplot2)
getwd()
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate average transparency score by journal
average_transparency <- data %>%
group_by(Journal) %>%
summarise(AvgTransparency = round(mean(Transparency.score..1.5.), 2))
# Print the result
print(average_transparency)
# Visualize the result with a bar chart
ggplot(average_transparency, aes(x = reorder(Journal, AvgTransparency), y = AvgTransparency)) +
geom_bar(stat = "identity") +
labs(title = "Average Transparency Score by Journal",
x = "Journal",
y = "Average Transparency Score") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate data sharing rates by journal
data_sharing_rates <- data %>%
group_by(Journal, `Is the data shared?`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Is the data shared?`))
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate data sharing rates by journal
data_sharing_rates <- data %>%
group_by(Journal, `Is the data shared?`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(Is.the.data.shared.))
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate data sharing rates by journal
data_sharing_rates <- data %>%
group_by(Journal, `Is the data shared?`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Is.the.data.shared.`))
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate data sharing rates by journal
data_sharing_rates <- data %>%
group_by(Journal, `Is.the.data.shared.`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Is.the.data.shared.`))
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate data sharing rates by journal
data_sharing_rates <- data %>%
group_by(Journal, `Is.there.data.shared.`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Is.there.data.shared.`))
# Print the result
print(data_sharing_rates)
# Visualize the result with a stacked bar chart
ggplot(data_sharing_rates, aes(x = Journal, y = Proportion, fill = `Is.there.data.shared.`)) +
geom_bar(stat = "identity") +
labs(title = "Data Sharing Rates by Journal",
subtitle = "Proportion of Fully Shared, Partially Shared, and Not Shared Data",
x = "Journal",
y = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label = round(Proportion, 2)),
position = position_stack(vjust = 0.5),
color = "white",
size = 3)
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Calculate code sharing rates by journal
code_sharing_rates <- data %>%
group_by(Journal, `Is.the.code.shared.`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Is.the.code.shared.`))
# Print the result
print(code_sharing_rates)
# Visualize the result with a stacked bar chart
ggplot(code_sharing_rates, aes(x = Journal, y = Proportion, fill = `Is.the.code.shared.`)) +
geom_bar(stat = "identity") +
labs(title = "Code Sharing Rates by Journal",
subtitle = "Proportion of Code Shared vs. Not Shared",
x = "Journal",
y = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label = round(Proportion, 2)),
position = position_stack(vjust = 0.5),
color = "white",
size = 3)
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Filter data to include only fully or partially shared data
data_shared <- data %>%
filter(`Is the data shared?` == "Fully available" | `Is the data shared?` == "Partially available")
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Filter data to include only fully or partially shared data
data_shared <- data %>%
filter(`Is.there.data.shared.` == "Fully available" | `Is.there.data.shared.` == "Partially available")
# Calculate license rates by journal
license_rates <- data_shared %>%
group_by(Journal, `Data.license`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Data.license`))
# Print the result
print(license_rates)
# Visualize the result with a stacked bar chart
ggplot(license_rates, aes(x = Journal, y = Proportion, fill = `Data.license`)) +
geom_bar(stat = "identity") +
labs(title = "Data License Rates by Journal",
subtitle = "Proportion of Licenses Provided for Shared Data",
x = "Journal",
y = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label = round(Proportion, 2)),
position = position_stack(vjust = 0.5),
color = "white",
size = 3)
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Filter data to include only fully or partially shared data
data_shared <- data %>%
filter(`Is.there.data.shared.` == "Fully available" | `Is.there.data.shared.` == "Partially available")
# Calculate license rates by journal
license_rates <- data_shared %>%
group_by(Journal, `Data.license`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Data.license`))
# Print the result
print(license_rates)
# Visualize the result with a stacked bar chart
ggplot(license_rates, aes(x = Journal, y = Proportion, fill = `Data.license`)) +
geom_bar(stat = "identity") +
labs(title = "Data License Rates by Journal",
subtitle = "Proportion of Licenses Provided for Shared Data",
x = "Journal",
y = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label = round(Proportion, 2)),
position = position_stack(vjust = 0.5),
color = "white",
size = 3)
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Set the working directory
setwd("C:/Users/PC/Desktop/projects/R")
# Import the data from CSV
data <- read.csv("./data.csv")
# Filter data to include only fully or partially shared code
code_shared <- data %>%
filter(`Is.the.code.shared.` == "Partially available" | `Is.the.code.shared.` == "Fully available")
# Calculate license rates by journal
license_rates <- code_shared %>%
group_by(Journal, `Code.license.provided.`) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
filter(!is.na(`Code.license.provided.`))
# Print the result
print(license_rates)
# Visualize the result with a stacked bar chart
ggplot(license_rates, aes(x = Journal, y = Proportion, fill = `Code.license.provided.`)) +
geom_bar(stat = "identity") +
labs(title = "Code License Rates by Journal",
subtitle = "Proportion of Licenses Provided for Shared Code",
x = "Journal",
y = "Proportion") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
scale_fill_brewer(palette = "Set2") +
geom_text(aes(label = round(Proportion, 2)),
position = position_stack(vjust = 0.5),
color = "white",
size = 3)
